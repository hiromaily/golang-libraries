syntax = "proto3";

package samplepb;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

option java_package = "com.github.hiromaily.golibs.protobuf";
option java_outer_classname = "Sample";

message SampleBase {
  string sample_name = 1;
  int64 time = 2;

  // at least one of field should be used
  oneof sample_data {
    Category1Sample category1 = 3;
    Category2Sample category2 = 4;
  }
}

message Category1Sample {
  Something1 something1 = 1;
  Something2 something2 = 2;
  Client client = 3;
  map<string, int64> md = 4;
  google.protobuf.Timestamp last_updated = 5;
  google.protobuf.Struct definition = 6;
  google.protobuf.Any details = 7;
}

message Category2Sample {
  Something1 something1 = 1;

  uint64 a_id = 2;
  double b_id = 3;
  string s_name = 4;
  bool b_flag = 5;
  bytes bt_data = 6;
}

message Something1 {
  uint64 id = 1;
  uint32 u_id = 2;
  Something1Type type = 3;
  repeated string data = 4;
}

message Something2 {
  string name = 1;
  int64 p_time = 2;
}

message Client {
  string name = 1;
  uint32 age = 2;
  uint32 height = 3;
}

enum Something1Type {
  SOMETHING_TYPE_A = 0;
  SOMETHING_TYPE_B = 1;
  SOMETHING_TYPE_C = 2;
}

// Sample is the sample service.
//service Sample {
//  // UnaryEcho is unary echo.
//  rpc UnaryEcho(SampleBase) returns (EchoResponse) {}
//  // ServerStreamingEcho is server side streaming.
//  rpc ServerStreamingEcho(SampleBase) returns (stream EchoResponse) {}
//  // ClientStreamingEcho is client side streaming.
//  rpc ClientStreamingEcho(stream SampleBase) returns (EchoResponse) {}
//  // BidirectionalStreamingEcho is bidi streaming.
//  rpc BidirectionalStreamingEcho(stream SampleBase) returns (stream EchoResponse) {}
//}
